crystal_doc_search_index_callback({"repository_name":"colors","body":"# colors and gradients\n\nThis is a library focused on working with colors and gradients. At this stage\nit allows you to create an RGB gradient.\n\n### New!\nThis shard now features [100% test coverage](https://dscottboggs.github.io/colors-and-gradients/coverage/index.html)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  colors:\n    github: dscottboggs/colors-and-gradients\n```\n\n## Usage\n\n```crystal\nrequire \"colors\"\n\ninclude Colors\n\nred = Color.red\ngreen = Color.new red: 0, green: 0xFF, blue: 0\ngray = Color.gray 0x55\n\ncolor_based_on_percent = Gradient.new :red, :green, 100\n\ncolor = color_based_on_percent[50] # => Color red: 127, green: 127, blue: 0\ncolor.to_s                         # => \"#7F7F00\"\n```\n\nFull documentation can be found [here](https://dscottboggs.github.io/colors-and-gradients/)\n\n## Development\n\nIt's crystal, just check out the repo.\n\n## Contributing\n\n1. Fork it (<https://github.com/dscottboggs/colors/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [dscottboggs](https://github.com/dscottboggs) D. Scott Boggs - creator, maintainer\n","program":{"html_id":"colors/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"colors","program":true,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"rand(type:Colors::ColorValue.class)-class-method","name":"rand","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"Colors::ColorValue.class"}],"args_string":"(type : Colors::ColorValue.class)","args_html":"(type : <span class=\"t\">Colors</span><span class=\"t\">::</span><span class=\"t\">ColorValue</span>.<span class=\"k\">class</span>)","location":{"filename":"src/colors/rand.cr","line_number":4,"url":null},"def":{"name":"rand","args":[{"name":"type","external_name":"type","restriction":"Colors::ColorValue.class"}],"visibility":"Public","body":"type.new(rand(UInt8))"}},{"html_id":"rand(type:Colors::Color.class)-class-method","name":"rand","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"Colors::Color.class"}],"args_string":"(type : Colors::Color.class)","args_html":"(type : <span class=\"t\">Colors</span><span class=\"t\">::</span><span class=\"t\">Color</span>.<span class=\"k\">class</span>)","location":{"filename":"src/colors/rand.cr","line_number":8,"url":null},"def":{"name":"rand","args":[{"name":"type","external_name":"type","restriction":"Colors::Color.class"}],"visibility":"Public","body":"type.new(rand(Colors::ColorValue), rand(Colors::ColorValue), rand(Colors::ColorValue))"}}],"types":[{"html_id":"colors/AnyFloat","path":"AnyFloat.html","kind":"alias","full_name":"AnyFloat","name":"AnyFloat","abstract":false,"locations":[{"filename":"src/colors/any_number.cr","line_number":2,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":true,"aliased":"(Float32 | Float64)","aliased_html":"Float32 | Float64","const":false},{"html_id":"colors/AnyInt","path":"AnyInt.html","kind":"alias","full_name":"AnyInt","name":"AnyInt","abstract":false,"locations":[{"filename":"src/colors/any_number.cr","line_number":1,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":true,"aliased":"(Int128 | Int16 | Int32 | Int64 | Int8 | UInt128 | UInt16 | UInt32 | UInt64 | UInt8)","aliased_html":"Int128 | Int16 | Int32 | Int64 | Int8 | UInt128 | UInt16 | UInt32 | UInt64 | UInt8","const":false},{"html_id":"colors/AnyNumber","path":"AnyNumber.html","kind":"alias","full_name":"AnyNumber","name":"AnyNumber","abstract":false,"locations":[{"filename":"src/colors/any_number.cr","line_number":3,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":true,"aliased":"(Float32 | Float64 | Int128 | Int16 | Int32 | Int64 | Int8 | UInt128 | UInt16 | UInt32 | UInt64 | UInt8)","aliased_html":"Float32 | Float64 | Int128 | Int16 | Int32 | Int64 | Int8 | UInt128 | UInt16 | UInt32 | UInt64 | UInt8","const":false},{"html_id":"colors/Colors","path":"Colors.html","kind":"module","full_name":"Colors","name":"Colors","abstract":false,"locations":[{"filename":"src/colors.cr","line_number":4,"url":null},{"filename":"src/colors/color.cr","line_number":5,"url":null},{"filename":"src/colors/color_value.cr","line_number":3,"url":null},{"filename":"src/colors/gradient.cr","line_number":1,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MAX_INTENSITY","name":"MAX_INTENSITY","value":"255_u8"},{"id":"MIN_INTENSITY","name":"MIN_INTENSITY","value":"0_u8"}],"doc":"A module for dealing with color values and gradients.","summary":"<p>A module for dealing with color values and gradients.</p>","types":[{"html_id":"colors/Colors/Color","path":"Colors/Color.html","kind":"class","full_name":"Colors::Color","name":"Color","abstract":false,"superclass":{"html_id":"colors/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"colors/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"colors/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/colors/color.cr","line_number":6,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"colors/Colors","kind":"module","full_name":"Colors","name":"Colors"},"class_methods":[{"html_id":"black-class-method","name":"black","doc":"A zero `Color`.","summary":"<p>A zero <code><a href=\"../Colors/Color.html\">Color</a></code>.</p>","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":56,"url":null},"def":{"name":"black","visibility":"Public","body":"self.new"}},{"html_id":"blue(intensity:AnyNumber|ColorValue=ColorValue.full)-class-method","name":"blue","doc":"A `Color` with `@blue` set to the given value and the other colors off.","summary":"<p>A <code><a href=\"../Colors/Color.html\">Color</a></code> with <code>@blue</code> set to the given value and the other colors off.</p>","abstract":false,"args":[{"name":"intensity","default_value":"ColorValue.full","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"args_string":"(intensity : AnyNumber | ColorValue = ColorValue.full)","args_html":"(intensity : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.full)","location":{"filename":"src/colors/color.cr","line_number":46,"url":null},"def":{"name":"blue","args":[{"name":"intensity","default_value":"ColorValue.full","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"visibility":"Public","body":"self.new(blue: ColorValue.new(intensity))"}},{"html_id":"gray(intensity:AnyNumber|ColorValue=ColorValue.new(136))-class-method","name":"gray","doc":"A `Color` where each primary color's value is equal.","summary":"<p>A <code><a href=\"../Colors/Color.html\">Color</a></code> where each primary color's value is equal.</p>","abstract":false,"args":[{"name":"intensity","default_value":"ColorValue.new(136)","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"args_string":"(intensity : AnyNumber | ColorValue = ColorValue.new(136))","args_html":"(intensity : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.<span class=\"k\">new</span>(<span class=\"n\">136</span>))","location":{"filename":"src/colors/color.cr","line_number":77,"url":null},"def":{"name":"gray","args":[{"name":"intensity","default_value":"ColorValue.new(136)","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"visibility":"Public","body":"self.grey(intensity)"}},{"html_id":"green(intensity:AnyNumber|ColorValue=ColorValue.full)-class-method","name":"green","doc":"A `Color` with `@green` set to the given value and the other colors off.","summary":"<p>A <code><a href=\"../Colors/Color.html\">Color</a></code> with <code>@green</code> set to the given value and the other colors off.</p>","abstract":false,"args":[{"name":"intensity","default_value":"ColorValue.full","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"args_string":"(intensity : AnyNumber | ColorValue = ColorValue.full)","args_html":"(intensity : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.full)","location":{"filename":"src/colors/color.cr","line_number":51,"url":null},"def":{"name":"green","args":[{"name":"intensity","default_value":"ColorValue.full","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"visibility":"Public","body":"self.new(green: ColorValue.new(intensity))"}},{"html_id":"grey(intensity:AnyNumber|ColorValue=ColorValue.new(136))-class-method","name":"grey","doc":"A `Color` where each primary color's value is equal.","summary":"<p>A <code><a href=\"../Colors/Color.html\">Color</a></code> where each primary color's value is equal.</p>","abstract":false,"args":[{"name":"intensity","default_value":"ColorValue.new(136)","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"args_string":"(intensity : AnyNumber | ColorValue = ColorValue.new(136))","args_html":"(intensity : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.<span class=\"k\">new</span>(<span class=\"n\">136</span>))","location":{"filename":"src/colors/color.cr","line_number":71,"url":null},"def":{"name":"grey","args":[{"name":"intensity","default_value":"ColorValue.new(136)","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"visibility":"Public","body":"intensity = ColorValue.new(intensity)\nself.new(red: intensity, blue: intensity, green: intensity)\n"}},{"html_id":"random-class-method","name":"random","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":36,"url":null},"def":{"name":"random","visibility":"Public","body":"rand(self)"}},{"html_id":"red(intensity:AnyNumber|ColorValue=ColorValue.full)-class-method","name":"red","doc":"A `Color` with `@red` set to the given value and the other colors off.","summary":"<p>A <code><a href=\"../Colors/Color.html\">Color</a></code> with <code>@red</code> set to the given value and the other colors off.</p>","abstract":false,"args":[{"name":"intensity","default_value":"ColorValue.full","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"args_string":"(intensity : AnyNumber | ColorValue = ColorValue.full)","args_html":"(intensity : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.full)","location":{"filename":"src/colors/color.cr","line_number":41,"url":null},"def":{"name":"red","args":[{"name":"intensity","default_value":"ColorValue.full","external_name":"intensity","restriction":"AnyNumber | ColorValue"}],"visibility":"Public","body":"self.new(red: ColorValue.new(intensity))"}},{"html_id":"white-class-method","name":"white","doc":"A `Color` with all values set to the maximum.","summary":"<p>A <code><a href=\"../Colors/Color.html\">Color</a></code> with all values set to the maximum.</p>","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":66,"url":null},"def":{"name":"white","visibility":"Public","body":"self.grey(ColorValue.max)"}},{"html_id":"zero-class-method","name":"zero","doc":"A zero `Color`.","summary":"<p>A zero <code><a href=\"../Colors/Color.html\">Color</a></code>.</p>","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":61,"url":null},"def":{"name":"zero","visibility":"Public","body":"black"}}],"constructors":[{"html_id":"from_s(string:String):Color-class-method","name":"from_s","doc":"Accepts a string like \"#RRGGBB\", returns a new Color. Raises an exception\nif the string is not in that format.","summary":"<p>Accepts a string like &quot;#RRGGBB&quot;, returns a new Color.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Color","args_html":"(string : String) : <a href=\"../Colors/Color.html\">Color</a>","location":{"filename":"src/colors/color.cr","line_number":23,"url":null},"def":{"name":"from_s","args":[{"name":"string","external_name":"string","restriction":"String"}],"return_type":"Color","visibility":"Public","body":"if string[0] == '#'\nelse\n  raise(ArgumentError.new(\"invalid character in color string at position 0: #{string[0]}\"))\nend\nself.new(red: ColorValue.new(string[1..2]), green: ColorValue.new(string[3..4]), blue: ColorValue.new(string[5..6]))\n"}},{"html_id":"new(pullparser:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"parser","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull parser : JSON::PullParser)","args_html":"(pull parser : JSON::PullParser)","location":{"filename":"src/colors/color.cr","line_number":105,"url":null},"def":{"name":"new","args":[{"name":"parser","external_name":"pull","restriction":"JSON::PullParser"}],"visibility":"Public","body":"self.from_s(parser.read_string)"}},{"html_id":"new(red:AnyNumber|ColorValue=ColorValue.off,green:AnyNumber|ColorValue=ColorValue.off,blue:AnyNumber|ColorValue=ColorValue.off)-class-method","name":"new","abstract":false,"args":[{"name":"red","default_value":"ColorValue.off","external_name":"red","restriction":"AnyNumber | ColorValue"},{"name":"green","default_value":"ColorValue.off","external_name":"green","restriction":"AnyNumber | ColorValue"},{"name":"blue","default_value":"ColorValue.off","external_name":"blue","restriction":"AnyNumber | ColorValue"}],"args_string":"(red : AnyNumber | ColorValue = ColorValue.off, green : AnyNumber | ColorValue = ColorValue.off, blue : AnyNumber | ColorValue = ColorValue.off)","args_html":"(red : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.off, green : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.off, blue : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a> = <span class=\"t\">ColorValue</span>.off)","location":{"filename":"src/colors/color.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"red","default_value":"ColorValue.off","external_name":"red","restriction":"AnyNumber | ColorValue"},{"name":"green","default_value":"ColorValue.off","external_name":"green","restriction":"AnyNumber | ColorValue"},{"name":"blue","default_value":"ColorValue.off","external_name":"blue","restriction":"AnyNumber | ColorValue"}],"visibility":"Public","body":"_ = allocate\n_.initialize(red, green, blue)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"blue:Colors::ColorValue-instance-method","name":"blue","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":9,"url":null},"def":{"name":"blue","visibility":"Public","body":"@blue"}},{"html_id":"blue=(blue)-instance-method","name":"blue=","abstract":false,"args":[{"name":"blue","external_name":"blue","restriction":""}],"args_string":"(blue)","args_html":"(blue)","location":{"filename":"src/colors/color.cr","line_number":9,"url":null},"def":{"name":"blue=","args":[{"name":"blue","external_name":"blue","restriction":""}],"visibility":"Public","body":"@blue = blue"}},{"html_id":"colorize(text:String)-instance-method","name":"colorize","doc":"Return the given text as a colorized value for display in terminals.","summary":"<p>Return the given text as a colorized value for display in terminals.</p>","abstract":false,"args":[{"name":"text","external_name":"text","restriction":"String"}],"args_string":"(text : String)","args_html":"(text : String)","location":{"filename":"src/colors/color.cr","line_number":82,"url":null},"def":{"name":"colorize","args":[{"name":"text","external_name":"text","restriction":"String"}],"visibility":"Public","body":"(text.colorize(Colorize::ColorRGB.new(red: @red.to_u8, green: @green.to_u8, blue: @blue.to_u8))).to_s"}},{"html_id":"green:Colors::ColorValue-instance-method","name":"green","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":8,"url":null},"def":{"name":"green","visibility":"Public","body":"@green"}},{"html_id":"green=(green)-instance-method","name":"green=","abstract":false,"args":[{"name":"green","external_name":"green","restriction":""}],"args_string":"(green)","args_html":"(green)","location":{"filename":"src/colors/color.cr","line_number":8,"url":null},"def":{"name":"green=","args":[{"name":"green","external_name":"green","restriction":""}],"visibility":"Public","body":"@green = green"}},{"html_id":"red:Colors::ColorValue-instance-method","name":"red","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":7,"url":null},"def":{"name":"red","visibility":"Public","body":"@red"}},{"html_id":"red=(red)-instance-method","name":"red=","abstract":false,"args":[{"name":"red","external_name":"red","restriction":""}],"args_string":"(red)","args_html":"(red)","location":{"filename":"src/colors/color.cr","line_number":7,"url":null},"def":{"name":"red=","args":[{"name":"red","external_name":"red","restriction":""}],"visibility":"Public","body":"@red = red"}},{"html_id":"to_json(builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"builder","external_name":"builder","restriction":""}],"args_string":"(builder)","args_html":"(builder)","location":{"filename":"src/colors/color.cr","line_number":101,"url":null},"def":{"name":"to_json","args":[{"name":"builder","external_name":"builder","restriction":""}],"visibility":"Public","body":"builder.string(to_s)"}},{"html_id":"to_json-instance-method","name":"to_json","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":97,"url":null},"def":{"name":"to_json","visibility":"Public","body":"\"\\\"#{to_s}\\\"\""}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Return the standard `#XXXXXX` hexadecimal representation of this `Color`","summary":"<p>Return the standard <code>#XXXXXX</code> hexadecimal representation of this <code><a href=\"../Colors/Color.html\">Color</a></code></p>","abstract":false,"location":{"filename":"src/colors/color.cr","line_number":93,"url":null},"def":{"name":"to_s","visibility":"Public","body":"((\"#\" + @red.to_s) + @green.to_s) + @blue.to_s"}}]},{"html_id":"colors/Colors/ColorValue","path":"Colors/ColorValue.html","kind":"class","full_name":"Colors::ColorValue","name":"ColorValue","abstract":false,"superclass":{"html_id":"colors/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"colors/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"colors/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/colors/color_value.cr","line_number":8,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"colors/Colors","kind":"module","full_name":"Colors","name":"Colors"},"doc":"The value one primary color has out of a RGB color.","summary":"<p>The value one primary color has out of a RGB color.</p>","class_methods":[{"html_id":"full-class-method","name":"full","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":42,"url":null},"def":{"name":"full","visibility":"Public","body":"ColorValue.new(MAX_INTENSITY)"}},{"html_id":"max-class-method","name":"max","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":46,"url":null},"def":{"name":"max","visibility":"Public","body":"ColorValue.new(MAX_INTENSITY)"}},{"html_id":"min-class-method","name":"min","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":50,"url":null},"def":{"name":"min","visibility":"Public","body":"ColorValue.new(MIN_INTENSITY)"}},{"html_id":"off-class-method","name":"off","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":38,"url":null},"def":{"name":"off","visibility":"Public","body":"ColorValue.new(MIN_INTENSITY)"}}],"constructors":[{"html_id":"new(value:UInt8=MIN_INTENSITY)-class-method","name":"new","abstract":false,"args":[{"name":"value","default_value":"MIN_INTENSITY","external_name":"value","restriction":"UInt8"}],"args_string":"(value : UInt8 = MIN_INTENSITY)","args_html":"(value : UInt8 = <span class=\"t\">MIN_INTENSITY</span>)","location":{"filename":"src/colors/color_value.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"value","default_value":"MIN_INTENSITY","external_name":"value","restriction":"UInt8"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(value:AnyNumber|ColorValue)-class-method","name":"new","doc":"Create a `ColorValue` from a number or another color value.\n\nRaises `OverflowError` if the value won't fit in a `UInt8`; I.E. if the\nvalue is less than 0 or greater than 255, or not an integer; E.G. `3.0`,\n`100u64`, `255f64`, or `ColorValue::new(100u8)` are acceptable\nparameters, `-1`, `256u16`, or `123.456` will throw.","summary":"<p>Create a <code><a href=\"../Colors/ColorValue.html\">ColorValue</a></code> from a number or another color value.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"AnyNumber | ColorValue"}],"args_string":"(value : AnyNumber | ColorValue)","args_html":"(value : <a href=\"../AnyNumber.html\">AnyNumber</a> | <a href=\"../Colors/ColorValue.html\">ColorValue</a>)","location":{"filename":"src/colors/color_value.cr","line_number":17,"url":null},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"AnyNumber | ColorValue"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(value:String=\"0\")-class-method","name":"new","doc":"Create a `ColorValue` from a string representation: either a\n**hexadecimal** numeric value between 0 and 255, or the words `\"full\"` or\n`\"off\"` which translate to `MAX_INTENSITY` and `MIN_INTENSITY`,\nrespectively.\n\nRaises if the value isn't a valid **base-16** integer which fits into 8\nbits, unsigned.","summary":"<p>Create a <code><a href=\"../Colors/ColorValue.html\">ColorValue</a></code> from a string representation: either a <strong>hexadecimal</strong> numeric value between 0 and 255, or the words <code>&quot;full&quot;</code> or <code>&quot;off&quot;</code> which translate to <code><a href=\"../Colors.html#MAX_INTENSITY\">MAX_INTENSITY</a></code> and <code><a href=\"../Colors.html#MIN_INTENSITY\">MIN_INTENSITY</a></code>, respectively.</p>","abstract":false,"args":[{"name":"value","default_value":"\"0\"","external_name":"value","restriction":"String"}],"args_string":"(value : String = \"0\")","args_html":"(value : String = <span class=\"s\">&quot;0&quot;</span>)","location":{"filename":"src/colors/color_value.cr","line_number":28,"url":null},"def":{"name":"new","args":[{"name":"value","default_value":"\"0\"","external_name":"value","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"%(other)-instance-method","name":"%","doc":"Defines a new color where this color % other","summary":"<p>Defines a new color where this color % other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"%","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value % other)"}},{"html_id":"&(other)-instance-method","name":"&","doc":"Defines a new color where this color & other","summary":"<p>Defines a new color where this color &amp; other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"&","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value & other)"}},{"html_id":"*(other)-instance-method","name":"*","doc":"Defines a new color where this color * other","summary":"<p>Defines a new color where this color * other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"*","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value * other)"}},{"html_id":"+(other)-instance-method","name":"+","doc":"Defines a new color where this color + other","summary":"<p>Defines a new color where this color + other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"+","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value + other)"}},{"html_id":"-(other)-instance-method","name":"-","doc":"Defines a new color where this color - other","summary":"<p>Defines a new color where this color - other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value - other)"}},{"html_id":"/(other)-instance-method","name":"/","doc":"Defines a new color where this color / other","summary":"<p>Defines a new color where this color / other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"/","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value / other)"}},{"html_id":"<(other)-instance-method","name":"<","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":71,"url":null},"def":{"name":"<","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"@value < other.to_u8"}},{"html_id":"<=(other)-instance-method","name":"<=","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":71,"url":null},"def":{"name":"<=","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"@value <= other.to_u8"}},{"html_id":"==(other)-instance-method","name":"==","doc":"Returns `false` (other can only be a `Value` here).","summary":"<p>Returns <code>false</code> (other can only be a <code>Value</code> here).</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":71,"url":null},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"@value == other.to_u8"}},{"html_id":">(other)-instance-method","name":">","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":71,"url":null},"def":{"name":">","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"@value > other.to_u8"}},{"html_id":">=(other)-instance-method","name":">=","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":71,"url":null},"def":{"name":">=","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"@value >= other.to_u8"}},{"html_id":"^(other)-instance-method","name":"^","doc":"Defines a new color where this color ^ other","summary":"<p>Defines a new color where this color ^ other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"^","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value ^ other)"}},{"html_id":"abs:UInt8-instance-method","name":"abs","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":85,"url":null},"def":{"name":"abs","visibility":"Public","body":"@value"}},{"html_id":"to_f-instance-method","name":"to_f","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":66,"url":null},"def":{"name":"to_f","visibility":"Public","body":"@value.to_f"}},{"html_id":"to_i-instance-method","name":"to_i","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":58,"url":null},"def":{"name":"to_i","visibility":"Public","body":"@value.to_i"}},{"html_id":"to_s(io)-instance-method","name":"to_s","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/colors/color_value.cr","line_number":54,"url":null},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"io.printf(\"%02X\", @value)"}},{"html_id":"to_u8:UInt8-instance-method","name":"to_u8","abstract":false,"location":{"filename":"src/colors/color_value.cr","line_number":62,"url":null},"def":{"name":"to_u8","visibility":"Public","body":"@value"}},{"html_id":"|(other)-instance-method","name":"|","doc":"Defines a new color where this color | other","summary":"<p>Defines a new color where this color | other</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/colors/color_value.cr","line_number":78,"url":null},"def":{"name":"|","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"ColorValue.new(@value | other)"}}]},{"html_id":"colors/Colors/Gradient","path":"Colors/Gradient.html","kind":"class","full_name":"Colors::Gradient","name":"Gradient","abstract":false,"superclass":{"html_id":"colors/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"colors/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"colors/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"colors/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/colors/gradient.cr","line_number":8,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"colors/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"colors/Colors","kind":"module","full_name":"Colors","name":"Colors"},"constructors":[{"html_id":"new(low_color:ValidColor=:red,high_color:ValidColor=:green,from:ColorValue|UInt8=ColorValue.off,upto:ColorValue|UInt8=ColorValue.full,max=100_i64)-class-method","name":"new","abstract":false,"args":[{"name":"low_color","default_value":":red","external_name":"low_color","restriction":"ValidColor"},{"name":"high_color","default_value":":green","external_name":"high_color","restriction":"ValidColor"},{"name":"from","default_value":"ColorValue.off","external_name":"from","restriction":"ColorValue | UInt8"},{"name":"upto","default_value":"ColorValue.full","external_name":"upto","restriction":"ColorValue | UInt8"},{"name":"max","default_value":"100_i64","external_name":"max","restriction":""}],"args_string":"(low_color : ValidColor = :red, high_color : ValidColor = :green, from : ColorValue | UInt8 = ColorValue.off, upto : ColorValue | UInt8 = ColorValue.full, max = 100_i64)","args_html":"(low_color : <a href=\"../Colors/ValidColor.html\">ValidColor</a> = <span class=\"n\">:red</span>, high_color : <a href=\"../Colors/ValidColor.html\">ValidColor</a> = <span class=\"n\">:green</span>, from : <a href=\"../Colors/ColorValue.html\">ColorValue</a> | UInt8 = <span class=\"t\">ColorValue</span>.off, upto : <a href=\"../Colors/ColorValue.html\">ColorValue</a> | UInt8 = <span class=\"t\">ColorValue</span>.full, max = <span class=\"n\">100_i64</span>)","location":{"filename":"src/colors/gradient.cr","line_number":23,"url":null},"def":{"name":"new","args":[{"name":"low_color","default_value":":red","external_name":"low_color","restriction":"ValidColor"},{"name":"high_color","default_value":":green","external_name":"high_color","restriction":"ValidColor"},{"name":"from","default_value":"ColorValue.off","external_name":"from","restriction":"ColorValue | UInt8"},{"name":"upto","default_value":"ColorValue.full","external_name":"upto","restriction":"ColorValue | UInt8"},{"name":"max","default_value":"100_i64","external_name":"max","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(low_color, high_color, from, upto, max)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(range:Range(Int64,Int64),low_color:ValidColor=:red,high_color:ValidColor=:green,from:ColorValue|UInt8=ColorValue.off,upto:ColorValue|UInt8=ColorValue.full)-class-method","name":"new","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int64, Int64)"},{"name":"low_color","default_value":":red","external_name":"low_color","restriction":"ValidColor"},{"name":"high_color","default_value":":green","external_name":"high_color","restriction":"ValidColor"},{"name":"from","default_value":"ColorValue.off","external_name":"from","restriction":"ColorValue | UInt8"},{"name":"upto","default_value":"ColorValue.full","external_name":"upto","restriction":"ColorValue | UInt8"}],"args_string":"(range : Range(Int64, Int64), low_color : ValidColor = :red, high_color : ValidColor = :green, from : ColorValue | UInt8 = ColorValue.off, upto : ColorValue | UInt8 = ColorValue.full)","args_html":"(range : Range(Int64, Int64), low_color : <a href=\"../Colors/ValidColor.html\">ValidColor</a> = <span class=\"n\">:red</span>, high_color : <a href=\"../Colors/ValidColor.html\">ValidColor</a> = <span class=\"n\">:green</span>, from : <a href=\"../Colors/ColorValue.html\">ColorValue</a> | UInt8 = <span class=\"t\">ColorValue</span>.off, upto : <a href=\"../Colors/ColorValue.html\">ColorValue</a> | UInt8 = <span class=\"t\">ColorValue</span>.full)","location":{"filename":"src/colors/gradient.cr","line_number":35,"url":null},"def":{"name":"new","args":[{"name":"range","external_name":"range","restriction":"Range(Int64, Int64)"},{"name":"low_color","default_value":":red","external_name":"low_color","restriction":"ValidColor"},{"name":"high_color","default_value":":green","external_name":"high_color","restriction":"ValidColor"},{"name":"from","default_value":"ColorValue.off","external_name":"from","restriction":"ColorValue | UInt8"},{"name":"upto","default_value":"ColorValue.full","external_name":"upto","restriction":"ColorValue | UInt8"}],"visibility":"Public","body":"_ = allocate\n_.initialize(range, low_color, high_color, from, upto)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](val):Color-instance-method","name":"[]","abstract":false,"args":[{"name":"val","external_name":"val","restriction":""}],"args_string":"(val) : Color","args_html":"(val) : <a href=\"../Colors/Color.html\">Color</a>","location":{"filename":"src/colors/gradient.cr","line_number":48,"url":null},"def":{"name":"[]","args":[{"name":"val","external_name":"val","restriction":""}],"return_type":"Color","visibility":"Public","body":"value = val.to_f\nhigh_value = from + (((value - min) * (upto.to_u8 - from.to_u8)).to_f / (max - min))\nlow_value = ColorValue.new((upto - high_value.to_u8) + from.to_u8)\ncase @low_color\nwhen .red?\n  case @high_color\n  when .green?\n    Color.new(red: ColorValue.new(low_value), green: ColorValue.new(high_value), blue: ColorValue.new(from))\n  else\n    Color.new(red: ColorValue.new(low_value), green: ColorValue.new(from), blue: ColorValue.new(high_value))\n  end\nwhen .green?\n  case @high_color\n  when .red?\n    Color.new(red: ColorValue.new(high_value), green: ColorValue.new(low_value), blue: ColorValue.new(from))\n  else\n    Color.new(red: ColorValue.new(from), green: ColorValue.new(low_value), blue: ColorValue.new(high_value))\n  end\nelse\n  case @high_color\n  when .red?\n    Color.new(red: ColorValue.new(high_value), green: ColorValue.new(from), blue: ColorValue.new(low_value))\n  else\n    Color.new(red: ColorValue.new(from), green: ColorValue.new(high_value), blue: ColorValue.new(low_value))\n  end\nend\n"}},{"html_id":"check_colors-instance-method","name":"check_colors","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":101,"url":null},"def":{"name":"check_colors","visibility":"Public","body":"if @low_color == @high_color\n  raise(SameColor.new(@low_color))\nend"}},{"html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":105,"url":null},"def":{"name":"each","yields":1,"visibility":"Public","body":"(min...max).each do |c|\n  yield self[c]\nend"}},{"html_id":"from:Colors::ColorValue|UInt8-instance-method","name":"from","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":20,"url":null},"def":{"name":"from","visibility":"Public","body":"@from"}},{"html_id":"from=(from)-instance-method","name":"from=","abstract":false,"args":[{"name":"from","external_name":"from","restriction":""}],"args_string":"(from)","args_html":"(from)","location":{"filename":"src/colors/gradient.cr","line_number":20,"url":null},"def":{"name":"from=","args":[{"name":"from","external_name":"from","restriction":""}],"visibility":"Public","body":"@from = from"}},{"html_id":"high_color:Colors::ValidColor-instance-method","name":"high_color","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":18,"url":null},"def":{"name":"high_color","visibility":"Public","body":"@high_color"}},{"html_id":"low_color:Colors::ValidColor-instance-method","name":"low_color","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":17,"url":null},"def":{"name":"low_color","visibility":"Public","body":"@low_color"}},{"html_id":"max:Int64-instance-method","name":"max","doc":"Returns the element with the maximum value in the collection.\n\nIt compares using `>` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].max        # => 3\n[\"Alice\", \"Bob\"].max # => \"Bob\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the maximum value in the collection.</p>","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":16,"url":null},"def":{"name":"max","visibility":"Public","body":"@max"}},{"html_id":"max=(max)-instance-method","name":"max=","abstract":false,"args":[{"name":"max","external_name":"max","restriction":""}],"args_string":"(max)","args_html":"(max)","location":{"filename":"src/colors/gradient.cr","line_number":16,"url":null},"def":{"name":"max=","args":[{"name":"max","external_name":"max","restriction":""}],"visibility":"Public","body":"@max = max"}},{"html_id":"min:Int64-instance-method","name":"min","doc":"Returns the element with the minimum value in the collection.\n\nIt compares using `<` so it will work for any type that supports that method.\n\n```\n[1, 2, 3].min        # => 1\n[\"Alice\", \"Bob\"].min # => \"Alice\"\n```\n\nRaises `Enumerable::EmptyError` if the collection is empty.","summary":"<p>Returns the element with the minimum value in the collection.</p>","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":15,"url":null},"def":{"name":"min","visibility":"Public","body":"@min"}},{"html_id":"min=(min)-instance-method","name":"min=","abstract":false,"args":[{"name":"min","external_name":"min","restriction":""}],"args_string":"(min)","args_html":"(min)","location":{"filename":"src/colors/gradient.cr","line_number":15,"url":null},"def":{"name":"min=","args":[{"name":"min","external_name":"min","restriction":""}],"visibility":"Public","body":"@min = min"}},{"html_id":"range:Range(Int64,Int64)-instance-method","name":"range","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":19,"url":null},"def":{"name":"range","return_type":"Range(Int64, Int64)","visibility":"Public","body":"@range"}},{"html_id":"range=(range:Range(Int64,Int64))-instance-method","name":"range=","abstract":false,"args":[{"name":"range","external_name":"range","restriction":"Range(Int64, Int64)"}],"args_string":"(range : Range(Int64, Int64))","args_html":"(range : Range(Int64, Int64))","location":{"filename":"src/colors/gradient.cr","line_number":19,"url":null},"def":{"name":"range=","args":[{"name":"range","external_name":"range","restriction":"Range(Int64, Int64)"}],"visibility":"Public","body":"@range = range"}},{"html_id":"upto:Colors::ColorValue|UInt8-instance-method","name":"upto","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":21,"url":null},"def":{"name":"upto","visibility":"Public","body":"@upto"}},{"html_id":"upto=(upto)-instance-method","name":"upto=","abstract":false,"args":[{"name":"upto","external_name":"upto","restriction":""}],"args_string":"(upto)","args_html":"(upto)","location":{"filename":"src/colors/gradient.cr","line_number":21,"url":null},"def":{"name":"upto=","args":[{"name":"upto","external_name":"upto","restriction":""}],"visibility":"Public","body":"@upto = upto"}}],"types":[{"html_id":"colors/Colors/Gradient/SameColor","path":"Colors/Gradient/SameColor.html","kind":"class","full_name":"Colors::Gradient::SameColor","name":"SameColor","abstract":false,"superclass":{"html_id":"colors/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"colors/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"colors/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"colors/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/colors/gradient.cr","line_number":9,"url":null}],"repository_name":"colors","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"colors/Colors/Gradient","kind":"class","full_name":"Colors::Gradient","name":"Gradient"},"constructors":[{"html_id":"new(color:ValidColor)-class-method","name":"new","abstract":false,"args":[{"name":"color","external_name":"color","restriction":"ValidColor"}],"args_string":"(color : ValidColor)","args_html":"(color : <a href=\"../../Colors/ValidColor.html\">ValidColor</a>)","location":{"filename":"src/colors/gradient.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"color","external_name":"color","restriction":"ValidColor"}],"visibility":"Public","body":"_ = allocate\n_.initialize(color)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"colors/Colors/ValidColor","path":"Colors/ValidColor.html","kind":"enum","full_name":"Colors::ValidColor","name":"ValidColor","abstract":false,"ancestors":[{"html_id":"colors/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"colors/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"colors/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"colors/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/colors/gradient.cr","line_number":2,"url":null}],"repository_name":"colors","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Red","name":"Red","value":"0"},{"id":"Green","name":"Green","value":"1"},{"id":"Blue","name":"Blue","value":"2"}],"namespace":{"html_id":"colors/Colors","kind":"module","full_name":"Colors","name":"Colors"},"instance_methods":[{"html_id":"blue?-instance-method","name":"blue?","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":5,"url":null},"def":{"name":"blue?","visibility":"Public","body":"self == Blue"}},{"html_id":"green?-instance-method","name":"green?","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":4,"url":null},"def":{"name":"green?","visibility":"Public","body":"self == Green"}},{"html_id":"red?-instance-method","name":"red?","abstract":false,"location":{"filename":"src/colors/gradient.cr","line_number":3,"url":null},"def":{"name":"red?","visibility":"Public","body":"self == Red"}}]}]}]}})